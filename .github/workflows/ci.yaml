name: CI

on:
    push:
        tags:
            - v*

        branches:
            - '*'
            - '*/*'

    pull_request:
    workflow_dispatch:

permissions:
    contents: read
    pull-requests: read

jobs:
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ macos-latest, ubuntu-latest, windows-latest ]
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-go@v5
                with:
                    go-version: '^1.22'
            -   name: Run tests
                run: make test

    test-arm:
        name: Test ARM
        runs-on: ubuntu-latest
        strategy:
            matrix:
                arch: [ armv6, armv7, aarch64 ]
        steps:
            -   uses: actions/checkout@v4
            -   uses: uraimo/run-on-arch-action@v2
                id: runcmd
                with:
                    arch: ${{ matrix.arch }}
                    distro: bullseye
                    install: |
                        apt update
                        apt install -y build-essential wget

                        if [[ ${{ matrix.arch }} == arm* ]]; then
                            pkg=go1.22.0.linux-armv6l.tar.gz
                        else
                            pkg=go1.22.0.linux-arm64.tar.gz
                        fi

                        wget https://golang.org/dl/$pkg
                        tar -C /usr/local -xzf $pkg
                    run: |
                        export PATH=$PATH:/usr/local/go/bin
                        go build cmd/test/test.go
                        go test --timeout 5m --count 1 ./...

    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-go@v5
                with:
                    go-version: '^1.22'
            -   name: golangci-lint
                uses: golangci/golangci-lint-action@v6
